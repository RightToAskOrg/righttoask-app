<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit" 
             xmlns:local="clr-namespace:RightToAskClient"
             xmlns:models="clr-namespace:RightToAskClient.Models"
             xmlns:helpers="clr-namespace:RightToAskClient.Helpers;assembly=RightToAskClient"
             xmlns:viewModels="clr-namespace:RightToAskClient.ViewModels;assembly=RightToAskClient"
             xmlns:controls="clr-namespace:RightToAskClient.Views.Controls;assembly=RightToAskClient"
             x:Class="RightToAskClient.Views.QuestionDisplayCard"
             x:DataType="viewModels:QuestionDisplayCardViewModel">
  <ContentView.Content>
        <Frame Style="{StaticResource AppThemeFrame}" Padding="5" VerticalOptions="FillAndExpand">
            <Grid RowDefinitions="auto,auto,auto" ColumnDefinitions="2*,*,*" Padding="0" Margin="0" BackgroundColor="Transparent" RowSpacing="0" ColumnSpacing="0">
                <Grid ColumnDefinitions="*,auto" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                    <Label Grid.Row="0" Grid.Column="0" Text="{Binding QuestionAnswerers, StringFormat='To: {0}'}" Style="{StaticResource QuestionFrameCardText}" 
                           FontAttributes="Bold"/>
                </Grid>                
                <Label Text="{Binding Question.QuestionText}" Style="{StaticResource QuestionFrameCardText}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"/>
                <Button Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" Style="{StaticResource TransparentSquareButton}"
                        Command="{Binding QuestionDetailsCommand}" BackgroundColor="Transparent"/>
                <!--UpVote Button-->
                <StackLayout Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.thumb_up_48.png}" 
                             IsVisible="{Binding Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
                             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
                             xct:IconTintColorEffect.TintColor="Gray"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}"/>
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.thumb_up_48.png}" 
                             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" IsVisible="{Binding Question.AlreadyUpvoted}" Padding="5"
                             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}"/>
                    <Label Text="{Binding UpVotes, StringFormat='{0:F0}'}" Style="{StaticResource QuestionButtonText}" Margin="0" Padding="0"/>
                    <!-- Down-vote button -->
                    <controls:ColorSingleToggleButton
                        Source="{helpers:ImageResource RightToAskClient.Images.thumb_up_48.png}" Rotation="180"
                        Padding="5"
                        BackgroundColor="Transparent" Command="{Binding DownvoteCommand}" HorizontalOptions="Start"
                        IsBrightened="{Binding Question.AlreadyDownvoted}"
                        AutomationProperties.IsInAccessibleTree="True"
                        AutomationProperties.Name="{xct:Translate QuestionFrameThumbsDownAccessibilityName}"
                        AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsDownAccessibilityText}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="BrightenedStates">
                                <VisualState Name="NotBrightened">
                                    <VisualState.Setters>
                                        <Setter Property="xct:IconTintColorEffect.TintColor" Value ="{StaticResource UnselectedOptionButtonColor}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="Brightened">
                                    <VisualState.Setters>
                                        <Setter Property="xct:IconTintColorEffect.TintColor" Value="{StaticResource ButtonColor}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </controls:ColorSingleToggleButton>
                    <Label Text="{xct:Translate UpvoteDisplayCardButtonText}" Style="{StaticResource QuestionButtonText}"/>
                </StackLayout>
                <!--Share Button-->
                <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                    <ImageButton  Source="{helpers:ImageResource RightToAskClient.Images.share_48.png}" 
                             Padding="5" Command="{Binding ShareCommand}" BackgroundColor="Transparent"
                             xct:IconTintColorEffect.TintColor="Gray"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameShareButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameShareButtonAccessibilityText}"/>
                    <Label Text="Share" Style="{StaticResource QuestionButtonText}"/>
                </StackLayout>
                <!--Answer/Has an Answer Buttons-->
                <!-- TODO: We will still need a 'has answer' indicator and a 'write an answer' button (for MPs), but do UI design first.
                <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="2">
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.account_balance_48.png}" 
                             Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer, Converter={StaticResource Key=cnvInvert}}"
                             xct:IconTintColorEffect.TintColor="Gray"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameAnswerButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameAnswerButtonAccessibilityText}"/>
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.assured_workload_48.png}" 
                             Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer}"
                             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameShareButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameAnswerButtonAccessibilityText}"/>
                    <Label Text="Answer" Style="{StaticResource QuestionButtonText}"/>
                </StackLayout>
                -->
                <!--Report/Flag Button-->
                <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="2">
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.flag_48.png}"
                             IsVisible="{Binding Question.AlreadyReported, Converter={StaticResource Key=cnvInvert}}" Command="{Binding ReportCommand}" 
                             xct:IconTintColorEffect.TintColor="Gray"
                             Padding="5" BackgroundColor="Transparent"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameFlagButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameFlagButtonAccessibilityText}"/>
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.flag_48.png}" 
                             Padding="5" xct:IconTintColorEffect.TintColor="{StaticResource AlertColor}" Command="{Binding ReportCommand}" 
                             IsVisible="{Binding Question.AlreadyReported}" BackgroundColor="Transparent"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameFlagButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameFlagButtonAccessibilityTextRed}"/>
                    <Label Text="Flag" Style="{StaticResource QuestionButtonText}"/>
                </StackLayout>
            </Grid>
        </Frame>
    </ContentView.Content>
</ContentView>