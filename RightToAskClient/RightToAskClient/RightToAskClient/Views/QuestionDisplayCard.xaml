<?xml version="1.0" encoding="UTF-8"?>

<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:local="clr-namespace:RightToAskClient"
             xmlns:models="clr-namespace:RightToAskClient.Models"
             xmlns:helpers="clr-namespace:RightToAskClient.Helpers;assembly=RightToAskClient"
             xmlns:viewModels="clr-namespace:RightToAskClient.ViewModels;assembly=RightToAskClient"
             xmlns:controls="clr-namespace:RightToAskClient.Views.Controls;assembly=RightToAskClient"
             x:Class="RightToAskClient.Views.QuestionDisplayCard"
             x:DataType="viewModels:QuestionDisplayCardViewModel">
    <ContentView.Content>
        <!-- <StackLayout> -->
        <Grid>
            <StackLayout Style="{StaticResource AppThemeFrame}" 
                         Padding="5" 
                         VerticalOptions="FillAndExpand"
                         IsVisible="{Binding Question.AlreadyReported, Converter={StaticResource Key=cnvInvert}}" >
                <Grid RowDefinitions="auto,auto,auto" ColumnDefinitions="2*,*,*" Padding="0" Margin="0"
                      BackgroundColor="Transparent" RowSpacing="0" ColumnSpacing="0">
                    <Grid ColumnDefinitions="*,auto" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                        <Label Margin="16, 0, 16, 0" Grid.Row="0" Grid.Column="0"
                               Text="{Binding QuestionAnswerers, StringFormat='To: {0}'}"
                               Style="{StaticResource QuestionFrameCardText}"
                               FontAttributes="Bold" />
                    </Grid>
                    <Label Margin="16, 0, 16, 0" Text="{Binding Question.QuestionText}"
                           Style="{StaticResource QuestionFrameCardText}" Grid.Row="1" Grid.Column="0"
                           Grid.ColumnSpan="3" />
                    <Button Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3"
                            Style="{StaticResource TransparentSquareButton}"
                            Command="{Binding QuestionDetailsCommand}" BackgroundColor="Transparent" />
                    <!--UpVote Button-->
                    <StackLayout Margin="16, 0, 16, 0" Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                        <controls:ColorSingleToggleButton
                            IsBrightened="{Binding Question.AlreadyUpvoted}"
                            Padding="5"
                            HeightRequest="{x:OnPlatform Android=25, iOS=40}"
                            BackgroundColor="Transparent" Command="{Binding UpvoteCommand}"
                            HorizontalOptions="Start"
                            AutomationProperties.IsInAccessibleTree="True"
                            AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
                            AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="BrightenedStates">
                                    <VisualState Name="NotBrightened">
                                        <VisualState.Setters>
                                            <Setter Property="Source" Value="{AppThemeBinding Light={helpers:ImageResource RightToAskClient.Images.thumb_up_light.png}, Dark={helpers:ImageResource RightToAskClient.Images.thumb_up_dark.png} }"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState Name="Brightened">
                                        <VisualState.Setters>
                                            <Setter Property="Source" Value="{helpers:ImageResource RightToAskClient.Images.thumb_up_filled.png}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </controls:ColorSingleToggleButton>
                        <Label Text="{Binding UpVotes, StringFormat='{0:F0}'}"
                               Style="{StaticResource QuestionButtonText}" Margin="0" Padding="0" 
                               TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}"/>
                        <!-- Down-vote button -->
                        <controls:ColorSingleToggleButton
                            Padding="5"
                            HeightRequest="{x:OnPlatform Android=25, iOS=40}"
                            BackgroundColor="Transparent" Command="{Binding DownvoteCommand}" HorizontalOptions="Start"
                            IsBrightened="{Binding Question.AlreadyDownvoted}"
                            AutomationProperties.IsInAccessibleTree="True"
                            AutomationProperties.Name="{xct:Translate QuestionFrameThumbsDownAccessibilityName}"
                            AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsDownAccessibilityText}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="BrightenedStates">
                                    <VisualState Name="NotBrightened">
                                        <VisualState.Setters>
                                            <Setter Property="Source" Value="{AppThemeBinding Light={helpers:ImageResource RightToAskClient.Images.thumb_down_light.png}, Dark={helpers:ImageResource RightToAskClient.Images.thumb_down_dark.png} }"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState Name="Brightened">
                                        <VisualState.Setters>
                                            <Setter Property="Source" Value="{helpers:ImageResource RightToAskClient.Images.thumb_down_filled.png}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </controls:ColorSingleToggleButton>
                        <Label Text="{xct:Translate UpvoteDisplayCardButtonText}"
                               Style="{StaticResource QuestionButtonText}" 
                               TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}"/>
                    </StackLayout>
                    <!--Share Button-->
                    <!-- TODO: Commented until better times
                    <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                        <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.share_48.png}"
                                     Padding="5" Command="{Binding ShareCommand}" BackgroundColor="Transparent"
                                     xct:IconTintColorEffect.TintColor="Gray"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="{xct:Translate QuestionFrameShareButtonAccessibilityName}"
                                     AutomationProperties.HelpText="{xct:Translate QuestionFrameShareButtonAccessibilityText}" />
                        <Label Text="Share" Style="{StaticResource QuestionButtonText}" />
                    </StackLayout>
                    -->
                    <!--Answer/Has an Answer Buttons-->
                    <!-- TODO: We will still need a 'has answer' indicator and a 'write an answer' button (for MPs), but do UI design first.
                <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="2">
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.account_balance_48.png}" 
                             Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer, Converter={StaticResource Key=cnvInvert}}"
                             xct:IconTintColorEffect.TintColor="Gray"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameAnswerButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameAnswerButtonAccessibilityText}"/>
                    <ImageButton Source="{helpers:ImageResource RightToAskClient.Images.assured_workload_48.png}" 
                             Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer}"
                             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}"
                             AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{xct:Translate QuestionFrameShareButtonAccessibilityName}"
                             AutomationProperties.HelpText="{xct:Translate QuestionFrameAnswerButtonAccessibilityText}"/>
                    <Label Text="Answer" Style="{StaticResource QuestionButtonText}"/>
                </StackLayout>
                -->
                    <!--Report/Flag Button-->
                    <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="2">

                        <ImageButton Source="{AppThemeBinding Light={helpers:ImageResource RightToAskClient.Images.flags_light.png}, Dark={helpers:ImageResource RightToAskClient.Images.flags_dark.png} }"
                                     Padding="5"
                                     HeightRequest="{x:OnPlatform Android=25, iOS=40}"
                                     Command="{Binding ReportCommand}"
                                     BackgroundColor="Transparent"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="{xct:Translate QuestionFrameFlagButtonAccessibilityName}"
                                     AutomationProperties.HelpText="{xct:Translate QuestionFrameFlagButtonAccessibilityTextRed}" />
                        <Label Text="Flag" Style="{StaticResource QuestionButtonText}" TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}"/>
                    </StackLayout>
                    <BoxView Style="{StaticResource Separator}" Grid.Row="3" Grid.Column="0" />
                    <BoxView Style="{StaticResource Separator}" Grid.Row="3" Grid.Column="1" />
                    <BoxView Style="{StaticResource Separator}" Grid.Row="3" Grid.Column="2" />
                </Grid>

            </StackLayout>
            <!-- </StackLayout> -->
            <StackLayout BackgroundColor="{AppThemeBinding Light=White, Dark=Black}"
                         IsVisible="{Binding Question.AlreadyReported}"
                         VerticalOptions="Fill"
                         HorizontalOptions="Fill">
                <StackLayout Orientation="Vertical"
                             VerticalOptions="CenterAndExpand"
                             HorizontalOptions="CenterAndExpand"
                             Padding="16">
                    <Image Source="{helpers:ImageResource RightToAskClient.Images.visibility_off.png}"
                           xct:IconTintColorEffect.TintColor="{AppThemeBinding Light=Black, Dark=White}"
                           WidthRequest="24"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center" />
                    <Label Text="{xct:Translate DisplayCardHiddenQuestionTitle}"
                           FontAttributes="Bold"
                           FontSize="16"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center"/>
                    <Label Text="{xct:Translate DisplayCardHiddenQuestionBody}"
                           FontSize="14"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center"/>
                </StackLayout>
                <BoxView Style="{StaticResource Separator}"
                         VerticalOptions="End" />
            </StackLayout>
        </Grid>
    </ContentView.Content>
</ContentView>