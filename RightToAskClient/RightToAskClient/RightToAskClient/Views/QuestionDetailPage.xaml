<?xml version="1.0" encoding="UTF-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:RightToAskClient.Views;assembly=RightToAskClient"
             xmlns:rightToAskClient="clr-namespace:RightToAskClient;assembly=RightToAskClient"
             xmlns:controls="clr-namespace:RightToAskClient.Controls;assembly=RightToAskClient"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:models="clr-namespace:RightToAskClient.Models;assembly=RightToAskClient"
             xmlns:local="clr-namespace:RightToAskClient"
             xmlns:vm="clr-namespace:RightToAskClient.ViewModels"
             x:Class="RightToAskClient.Views.QuestionDetailPage"
             x:DataType="vm:QuestionViewModel">
	<ContentPage.ToolbarItems>
		<ToolbarItem Text="{xct:Translate HomeButtonText}" Command="{Binding HomeButtonCommand}"
		             x:DataType="vm:BaseViewModel"
		             IconImageSource="{local:ImageResource RightToAskClient.Images.home4.png}" />
		<ToolbarItem Text="{xct:Translate InfoPopupButtonText}" Command="{Binding InfoPopupCommand}"
		             x:DataType="vm:BaseViewModel"
		             IconImageSource="{local:ImageResource RightToAskClient.Images.help_75.png}" />
	</ContentPage.ToolbarItems>
	<ContentPage.Content>
		<ScrollView>
			<StackLayout x:Name="WholePage" Margin="20">
				<StackLayout Orientation="Horizontal" IsVisible="{Binding IsNewQuestion}">
					<Label Text="{xct:Translate QuestionReviewHeaderText}" Style="{StaticResource Header1}"
					       HorizontalOptions="StartAndExpand" />
					<BoxView />
				</StackLayout>
				<StackLayout Orientation="Horizontal" IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
					<Label Text="{xct:Translate QuestionHeaderText}" Style="{StaticResource Header2}"
					       HorizontalOptions="StartAndExpand" />
					<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
					             IsVisible="{Binding Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
					             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
					             xct:IconTintColorEffect.TintColor="Gray"
					             AutomationProperties.IsInAccessibleTree="True"
					             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
					             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
					<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
					             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}"
					             IsVisible="{Binding Question.AlreadyUpvoted}" Padding="5"
					             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
					             AutomationProperties.IsInAccessibleTree="True"
					             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
					             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
					<Label Text="{Binding Question.UpVotes, StringFormat='{0:F0} / '}" Style="{StaticResource NormalText}" Margin="0" Padding="0"/>	
					<Label Text="{Binding Question.UpVotes, StringFormat='{0:F0}'}" Style="{StaticResource NormalText}" Margin="0" Padding="0"/>	
					<Label Text="{xct:Translate UpvoteDisplayCardButtonText, StringFormat='{0:F0}s'}" Style="{StaticResource NormalText}" />
				</StackLayout>
				<Editor x:Name="QuestionTextEditor" Text="{Binding Question.QuestionText}"
				        IsReadOnly="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}" />
				<Label Text="{xct:Translate WhoShouldAnswerTitle}" Style="{StaticResource Header2}" />
				<Label Text="{Binding Question.QuestionAnswerers, StringFormat='{0:F0}'}" Style="{StaticResource LeftMedium}" />
				<StackLayout Orientation="Horizontal" IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
					<Label Text="{xct:Translate AnswererPermissions}" Style="{StaticResource Header2}" />
					<CheckBox IsChecked="{Binding OthersCanAddQuestionAnswerers}" />
				</StackLayout>
				<!--Question Askers/Option B things-->
				<StackLayout IsVisible="{Binding AnswerInApp, Converter={StaticResource Key=cnvInvert}}">
					<Label Text="{xct:Translate OptionBText4}" Style="{StaticResource Header2}" />
					<Label Text="{Binding Question.QuestionAskers, StringFormat='{0:F0}'}" Style="{StaticResource LeftMedium}" />
					<!-- Ask the user whether they allow other users to add QuestionAskers. (Y/N) -->
					<StackLayout Orientation="Horizontal"
					             IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
						<Label Text="{xct:Translate AskerPermissions}" Style="{StaticResource Header2}" />
						<CheckBox IsChecked="{Binding OthersCanAddQuestionAskers}" />
					</StackLayout>
				</StackLayout>
				<StackLayout Orientation="Horizontal">
					<StackLayout.GestureRecognizers>
						<TapGestureRecognizer Command="{Binding QuestionSuggesterCommand}" />
					</StackLayout.GestureRecognizers>
					<Label Text="{xct:Translate QuestionWriterHeaderText}" Style="{StaticResource Header2}" />
					<Label Text="{Binding Question.QuestionSuggester, StringFormat='{0:F0}'}"
					       Style="{StaticResource NormalText}" Margin="0, 10, 0, 0"
					       IsEnabled="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
					</Label>
				</StackLayout>
				<!-- Background -->
				<StackLayout Orientation="Vertical">
					<Label x:Name="BackgroundLabel" Text="{xct:Translate BackgroundPageTitle}" Style="{StaticResource Header2}" />
					<Editor x:Name="BackgroundEditor" Placeholder="{xct:Translate AddBackgroundPlaceholderText}"
					        Text="{Binding Question.Background}"
					        Style="{StaticResource NormalEditor}"
					        IsReadOnly="{Binding CanEditBackground, Converter={StaticResource Key=cnvInvert}}" />
				</StackLayout>
				<!-- Up- or dismiss-voting options -->
				<Grid ColumnDefinitions="*,*,*,*" IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
					<StackLayout Grid.Row="0" Grid.Column="0" Orientation="Vertical">
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.trash_delete_48.png}"
						             IsVisible="{Binding .Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
						             xct:IconTintColorEffect.TintColor="Gray"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.trash_delete_48.png}"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" IsVisible="{Binding Question.AlreadyUpvoted}"
						             Padding="5"
						             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<Label Text="{xct:Translate DismissText}" Style="{StaticResource BoldNormalText}" />
					</StackLayout>
					<StackLayout Grid.Row="0" Grid.Column="1" Orientation="Vertical">
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.pending_48.png}"
						             IsVisible="{Binding Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
						             xct:IconTintColorEffect.TintColor="Gray"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.pending_48.png}"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" IsVisible="{Binding Question.AlreadyUpvoted}"
						             Padding="5"
						             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<Label Text="Meh" Style="{StaticResource BoldNormalText}" />
					</StackLayout>
					<StackLayout Grid.Row="0" Grid.Column="2" Orientation="Vertical">
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
						             IsVisible="{Binding Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
						             xct:IconTintColorEffect.TintColor="Gray"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" IsVisible="{Binding Question.AlreadyUpvoted}"
						             Padding="5"
						             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<Label Text="{xct:Translate UpvoteDisplayCardButtonText}" Style="{StaticResource BoldNormalText}" />
					</StackLayout>
					<StackLayout Grid.Row="0" Grid.Column="3" Orientation="Vertical">
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
						             IsVisible="{Binding Question.AlreadyUpvoted, Converter={StaticResource Key=cnvInvert}}" Padding="5"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" HorizontalOptions="Start"
						             xct:IconTintColorEffect.TintColor="Gray"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<ImageButton Source="{local:ImageResource RightToAskClient.Images.thumb_up_48.png}"
						             BackgroundColor="Transparent" Command="{Binding UpvoteCommand}" IsVisible="{Binding Question.AlreadyUpvoted}"
						             Padding="5"
						             xct:IconTintColorEffect.TintColor="{StaticResource ButtonColor}" HorizontalOptions="Start"
						             AutomationProperties.IsInAccessibleTree="True"
						             AutomationProperties.Name="{xct:Translate QuestionFrameThumbsUpAccessibilityName}"
						             AutomationProperties.HelpText="{xct:Translate QuestionFrameThumbsUpAccessibilityText}" />
						<Label Text="{xct:Translate UpvoteDisplayCardButtonText,  StringFormat='Double {0:F0}'}" Style="{StaticResource BoldNormalText}" />
					</StackLayout>
				</Grid>

			    <!-- Hansard link -->
			    <StackLayout Orientation="Vertical" IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}">
				    <Label Text="{xct:Translate LinkForAnswerHeaderText}" Style="{StaticResource Header2}"/>
				    <Editor x:Name="LinkToAnswerEditor" Placeholder="{xct:Translate LinkPlaceholderText}" Completed="Link_Entered"
				            Style="{StaticResource NormalEditor}" />
				    <!-- Answers, visible if there are any -->
				    <Label Text="{xct:Translate AnswerHeaderText}" Style="{StaticResource Header2}"/>
				    <StackLayout BindableLayout.ItemsSource="{Binding Answers}">
					    <BindableLayout.ItemTemplate>
						    <!-- <CollectionView x:Name="AnswerList" ItemsSource="{Binding Answers}" SelectionMode="None">
					    <CollectionView.ItemTemplate> -->
						    <DataTemplate x:DataType="models:Answer">
							    <views:AnswerDisplayCard />
						    </DataTemplate>
					    </BindableLayout.ItemTemplate>
				    </StackLayout>
					    <!-- </CollectionView.ItemTemplate>
				    </CollectionView> -->
				    <Editor x:Name="AnswerEditor" Placeholder="{xct:Translate AnswerPlaceholderText}" Completed="Answer_Entered" />
				    <Label Text="{xct:Translate ApproveAnswerText}" />
			    </StackLayout>
			    <!-- <Button Text="{Binding SaveButtonText}" Style="{StaticResource SaveButton}"
			            Command="{Binding SaveAnswerCommand}" HorizontalOptions="Center"
			            IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}" /> -->
			    <Button Text="{xct:Translate EditQuestionButtonText}" Style="{StaticResource SaveButton}"
			            Command="{Binding EditAnswerCommand}" HorizontalOptions="Center" 
			            IsVisible="{Binding IsNewQuestion, Converter={StaticResource Key=cnvInvert}}" />
			    <Button Text="{xct:Translate PublishQuestionButtonText}" Style="{StaticResource DoneButton}"
			            Command="{Binding SaveQuestionCommand}" HorizontalOptions="Center" IsVisible="{Binding IsNewQuestion}" />
                <Label x:Name="ReportLabel" Text="{Binding ReportLabelText}" Style="{StaticResource ReportLabel}"/>
		    </StackLayout>
	    </ScrollView>
    </ContentPage.Content>
</ContentPage>