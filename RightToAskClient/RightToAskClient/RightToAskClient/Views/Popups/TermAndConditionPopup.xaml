<?xml version="1.0" encoding="utf-8" ?>
<xct:Popup xmlns="http://xamarin.com/schemas/2014/forms"
           xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"    
           xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
           xmlns:local="clr-namespace:RightToAskClient"
           xmlns:helpers="clr-namespace:RightToAskClient.Helpers;assembly=RightToAskClient"
           x:Class="RightToAskClient.Views.Popups.TermAndConditionPopup"
           Size="300,160"
           IsLightDismissEnabled="False"
           Color="Transparent">
    <Frame CornerRadius="5" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" Padding="0"
               BackgroundColor="{AppThemeBinding Light={StaticResource WindowBackgroundColor}, Dark={StaticResource PopupDarkModeBgColor}}">
        <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="Transparent"  >
            <Label  VerticalOptions="StartAndExpand" 
                   HorizontalOptions="Center" HorizontalTextAlignment="Center" Style="{StaticResource PopupText}" Margin="24,24,24,0">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="{xct:Translate TermAndConditionPlainText}"/>
                        <Span Text="{xct:Translate PrivacyPolicy}"
                              TextColor="{AppThemeBinding Light={StaticResource UrlTextColorLightMode}, Dark={StaticResource UrlTextColorDarkMode}}"
                              TextDecorations="Underline">
                            <Span.GestureRecognizers>
                                <TapGestureRecognizer Tapped="PrivacyPolicy_OnTapped"
                                                      xct:SemanticEffect.Hint="{xct:Translate TCPolicyHint}"
                                                      xct:SemanticEffect.Description="{xct:Translate PrivacyPolicy}"/>
                            </Span.GestureRecognizers>
                        </Span>
                        <Span Text="{xct:Translate and}"/>
                        <Span Text="{xct:Translate TermAndCondition}"
                              TextColor="{AppThemeBinding Light={StaticResource UrlTextColorLightMode}, Dark={StaticResource UrlTextColorDarkMode}}"
                              TextDecorations="Underline">
                            <Span.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TermAndCondition_OnTapped" 
                                                      xct:SemanticEffect.Hint="{xct:Translate TCHint}"
                                                      xct:SemanticEffect.Description="{xct:Translate TermAndCondition}"/>
                            </Span.GestureRecognizers>
                        </Span>
                        <Span Text="."/>
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <StackLayout Padding="0,1,0,0" BackgroundColor="{AppThemeBinding Light={StaticResource FadedButtonColor}, Dark={StaticResource SeperatorDarkModeColor}}">
                   <!--Acknowledge/Dismiss Button Bottom Right-->
                   <StackLayout BackgroundColor="{AppThemeBinding Light=White, Dark={StaticResource PopupDarkModeBgColor}}">
                   <Button Text="{xct:Translate AgreeAndContinueButton}" HorizontalOptions="Center" VerticalOptions="End" Clicked="okButton_Clicked" 
                           xct:SemanticEffect.Hint="{xct:Translate TCContinueButtonHint}"
                           xct:SemanticEffect.Description="{xct:Translate AgreeAndContinueButton}"
                           Style="{StaticResource PopupOKButton}" BackgroundColor="Transparent"/>
                   </StackLayout>
            </StackLayout>
            
        </StackLayout>
    </Frame>
</xct:Popup>
