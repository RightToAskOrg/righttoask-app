<?xml version="1.0" encoding="UTF-8"?>

<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:helpers="clr-namespace:RightToAskClient.Maui.Helpers;assembly=RightToAskClient.Maui"
             xmlns:viewModels="clr-namespace:RightToAskClient.Maui.ViewModels;assembly=RightToAskClient.Maui"
             xmlns:controls="clr-namespace:RightToAskClient.Maui.Views.Controls;assembly=RightToAskClient.Maui"
             x:Class="RightToAskClient.Maui.Views.QuestionDisplayCard"
             xmlns:strings="clr-namespace:RightToAskClient.Maui.Resx"
             x:DataType="viewModels:QuestionDisplayCardViewModel">
    <ContentView.Content>
        <!-- <StackLayout> -->
        <Grid>
            <StackLayout 
                         Padding="5"
                         VerticalOptions="FillAndExpand"
                         IsVisible="{Binding Question.AlreadyReported, Converter={StaticResource Key=cnvInvert}}"
                         Style="{DynamicResource AppThemeFrame}" >
                <Grid ColumnDefinitions="2*,*,*" Padding="0" Margin="0"
                      BackgroundColor="Transparent" RowSpacing="0" ColumnSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid ColumnDefinitions="*,auto" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                        <Label Margin="16, 0, 16, 0" Grid.Row="0" Grid.Column="0"
                               Text="{Binding QuestionAnswerers, StringFormat='To: {0}'}"
                               Style="{DynamicResource QuestionFrameCardText}"
                               FontAttributes="Bold" />
                    </Grid>
                    <Label Margin="16, 0, 16, 0" Text="{Binding Question.QuestionText, Mode=OneWay}"
                           Style="{DynamicResource QuestionFrameCardText}" Grid.Row="1" Grid.Column="0"
                           Grid.ColumnSpan="3" />
                    <Button Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3"
                            Style="{DynamicResource TransparentSquareButton}"
                            Command="{Binding QuestionDetailsCommand}" BackgroundColor="Transparent" />
                    <!--UpVote Button-->
                    <FlexLayout Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" AlignItems="Start"
                                JustifyContent="SpaceBetween" HorizontalOptions="StartAndExpand"
                                Direction="Row" Margin="6, 0" Wrap="Wrap">
                        <StackLayout Orientation="Horizontal">
                            <controls:ColorSingleToggleButton
                                IsBrightened="{Binding Question.AlreadyUpvoted}"
                                Padding="5"
                                
                                WidthRequest="{x:OnPlatform Android=35, iOS=44}"
                                HeightRequest="{x:OnPlatform Android=35, iOS=44}"
                                BackgroundColor="Transparent" Command="{Binding UpvoteCommand}"
                                HorizontalOptions="Start"
                                AutomationProperties.IsInAccessibleTree="True"
                                AutomationProperties.Name="{DynamicResource QuestionFrameThumbsUpAccessibilityName}"
                                AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameThumbsUpAccessibilityText}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="BrightenedStates">
                                        <VisualState Name="NotBrightened">
                                            <VisualState.Setters>
                                                <Setter Property="Source"
                                                        Value="{AppThemeBinding Light=thumb_up_light.png, Dark=Images.thumb_up_dark.png }" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState Name="Brightened">
                                            <VisualState.Setters>
                                                <Setter Property="Source"
                                                        Value="thumb_up_filled.png" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </controls:ColorSingleToggleButton>
                            <Label Text="{Binding UpVotes, StringFormat='{0:F0}'}"
                                   Style="{DynamicResource QuestionButtonText}" Margin="0" Padding="0"
                                   TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}" />
                            <!-- Down-vote button -->
                            <controls:ColorSingleToggleButton
                                Padding="5"
                                HeightRequest="{x:OnPlatform Android=35, iOS=44}"
                                WidthRequest="{x:OnPlatform Android=35, iOS=44}"
                                BackgroundColor="Transparent" Command="{Binding DownvoteCommand}"
                                HorizontalOptions="Start"
                                IsBrightened="{Binding Question.AlreadyDownvoted}"
                                AutomationProperties.IsInAccessibleTree="True"
                                AutomationProperties.Name="{DynamicResource QuestionFrameThumbsDownAccessibilityName}"
                                AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameThumbsDownAccessibilityText}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="BrightenedStates">
                                        <VisualState Name="NotBrightened">
                                            <VisualState.Setters>
                                                <Setter Property="Source"
                                                        Value="{AppThemeBinding Light=thumb_down_light.png, Dark=Images.thumb_down_dark.png }" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState Name="Brightened">
                                            <VisualState.Setters>
                                                <Setter Property="Source"
                                                        Value="thumb_down_filled.png" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </controls:ColorSingleToggleButton>
                            <Label Text="{Binding DownVotes, StringFormat='{0:F0}'}"
                                   Style="{DynamicResource QuestionButtonText}"
                                   Margin="0"
                                   Padding="0"
                                   TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}" />
                            <!-- <Label Text="{x:Static strings:AppResources.UpvoteDisplayCardButtonText}" -->
                            <!--        Style="{DynamicResource QuestionButtonText}"  -->
                            <!--        TextColor="{AppThemeBinding Light={DynamicResource TextColorGray}, Dark=White}"/> -->
                        </StackLayout>
                        <!--Share Button-->
                        <!-- TODO: Commented until better times
                        <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                            <ImageButton Source="share_48.png"
                                         Padding="5" Command="{Binding ShareCommand}" BackgroundColor="Transparent"
                                         xct:IconTintColorEffect.TintColor="Gray"
                                         AutomationProperties.IsInAccessibleTree="True"
                                         AutomationProperties.Name="{DynamicResource QuestionFrameShareButtonAccessibilityName}"
                                         AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameShareButtonAccessibilityText}" />
                            <Label Text="Share" Style="{DynamicResource QuestionButtonText}" />
                        </StackLayout>
                        -->
                        <!--Answer/Has an Answer Buttons-->
                        <!-- TODO: We will still need a 'has answer' indicator and a 'write an answer' button (for MPs), but do UI design first.
                    <StackLayout Orientation="Horizontal" Grid.Row="2" Grid.Column="2">
                        <ImageButton Source="account_balance_48.png" 
                                 Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer, Converter={DynamicResource Key=cnvInvert}}"
                                 xct:IconTintColorEffect.TintColor="Gray"
                                 AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{DynamicResource QuestionFrameAnswerButtonAccessibilityName}"
                                 AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameAnswerButtonAccessibilityText}"/>
                        <ImageButton Source="assured_workload_48.png" 
                                 Padding="5" BackgroundColor="Transparent" IsVisible="{Binding Question.HasAnswer}"
                                 xct:IconTintColorEffect.TintColor="{DynamicResource ButtonColor}"
                                 AutomationProperties.IsInAccessibleTree="True" AutomationProperties.Name="{DynamicResource QuestionFrameShareButtonAccessibilityName}"
                                 AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameAnswerButtonAccessibilityText}"/>
                        <Label Text="Answer" Style="{DynamicResource QuestionButtonText}"/>
                    </StackLayout>
                    -->
                        <!--Report/Flag Button-->
                        <StackLayout Orientation="Horizontal">

                            <ImageButton
                                Source="{AppThemeBinding Light=flags_light.png, Dark=Images.flags_dark.png }"
                                Padding="5"
                                HeightRequest="{x:OnPlatform Android=35, iOS=44}"
                                WidthRequest="{x:OnPlatform Android=35, iOS=44}"
                                Command="{Binding ReportCommand}"
                                BackgroundColor="Transparent"
                                AutomationProperties.IsInAccessibleTree="True"
                                AutomationProperties.Name="{DynamicResource QuestionFrameFlagButtonAccessibilityName}"
                                AutomationProperties.HelpText="{x:Static strings:AppResources.QuestionFrameFlagButtonAccessibilityTextRed}" />
                            <Label Text="{x:Static strings:AppResources.ReportDisplayCardButtonText}"
                                   Style="{DynamicResource QuestionButtonText}"
                                   TextColor="{AppThemeBinding Light={StaticResource TextColorGray}, Dark=White}" />
                        </StackLayout>
                    </FlexLayout>

                </Grid>
                <BoxView Style="{DynamicResource Separator}" Margin="0,6,0,0" />
            </StackLayout>
            <!-- </StackLayout> -->
            <StackLayout BackgroundColor="{AppThemeBinding Light=White, Dark=Black}"
                         IsVisible="{Binding Question.AlreadyReported}"
                         VerticalOptions="Fill"
                         HorizontalOptions="Fill">
                <StackLayout Orientation="Vertical"
                             VerticalOptions="CenterAndExpand"
                             HorizontalOptions="CenterAndExpand"
                             Padding="16">
                    <Image Source="visibility_off.png"
                           WidthRequest="24"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center" />
                    <Label Text="{x:Static strings:AppResources.DisplayCardHiddenQuestionTitle}"
                           FontAttributes="Bold"
                           FontSize="16"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center" />
                    <Label Text="{x:Static strings:AppResources.DisplayCardHiddenQuestionBody}"
                           FontSize="14"
                           HorizontalOptions="CenterAndExpand"
                           VerticalOptions="Center" />
                </StackLayout>
                <BoxView Style="{DynamicResource Separator}"
                         VerticalOptions="End" />
            </StackLayout>
        </Grid>
    </ContentView.Content>
</ContentView>